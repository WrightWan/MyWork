import java.util.*;  
import java.io.*;
import java.net.URL;    
/*	Author: Rong Wan
 *  Course: CS-600A
 *  Term: 2016 Fall
 *  Description: Searching program using inverted file
 *  Input: a series of words typed to search among a database generated by a web crowler
 *  Output: each word with the links to the pages it occurs on, except stop words
 * 
*/
public class SimpleSearch
{

		static TreeMap<String, Integer> Words = new TreeMap<String, Integer>();//Data Structure to store words as keys and the index of the occurence list as values
		static ArrayList<ArrayList<String>> Occurence = new ArrayList<ArrayList<String>>(); //Data Structure to store the occurence list
		static List<String> stopwords = Arrays.asList("is","the","at","which","on","you","that","something","he","it","who");//Some stop words

		//Code for the web crawler
		public static void checkwords(String word, String link){//Processing each word in the line
			if(!stopwords.contains(word) && Words.containsKey(word)){
				if(!Occurence.get(Words.get(word)).contains(link)){
					Occurence.get(Words.get(word)).add(link);
				}
			}
			else{
				ArrayList<String> pages = new ArrayList<String>();
				pages.add(link);
				Occurence.add(pages);
				Words.put(word, Occurence.indexOf(pages));
			}
		}
		
		public static void checkpage(String link) throws IOException{//Processing each page listed in the input file
			URL url = new URL(link);
	        BufferedReader in = new BufferedReader(
	        new InputStreamReader(url.openStream()));
	        String inputLine;
	        while ((inputLine = in.readLine()) != null){
	        	String[] words = inputLine.split("\\W+");
	        	for(String word: words){
	        		checkwords(word,link);
	        	}
	        }
	        in.close();
		}
		
		public static void checkfile() throws IOException{//Processing the input file
			BufferedReader br = new BufferedReader(new FileReader("Input.txt"));			 
			String line = null;
			while ((line = br.readLine()) != null) {
				checkpage(line);
			}		 
			br.close();
			System.out.println("");
		}
		
		public static ArrayList<String> findword(String word){//Search the word by retrieving the occurence list from the database
			if(Words.containsKey(word)){
				return Occurence.get(Words.get(word));
			}
			else return null;
		}
		
		//Code for the actual searching
		public static void Search(){//Function for searching a phrase among the web pages listed in the input file
			Scanner reader = new Scanner(System.in);  
			System.out.println("Enter a series of words (Sample: I have an apple): ");
			String n = reader.nextLine(); 
			reader.close();
			String[] words = n.split("\\W+");
			Map<String, Integer> result = new HashMap<String, Integer>();
			for(String word: words){
				ArrayList<String> occur = findword(word);
				for(String page:occur){
					if(result.containsKey(page)) result.put(page,result.get(page)+1);
					else result.put(page, 1);
				}
			}//Here I used augmentation to compute intersection of many lists to make sure each link in each list is visited only once
			ArrayList<String> output = new ArrayList<String>();
			for(Map.Entry<String, Integer> entry:result.entrySet()){
				if(entry.getValue()==words.length) output.add(entry.getKey());
			}
			output(n,output);
			
		}
		
		public static void output(String words, ArrayList<String> output){//Write the result to the output file
			try{
			    PrintWriter writer = new PrintWriter("Output.txt", "UTF-8");
			    writer.println("Index terms:");
			    writer.println(words);
			    if(output.isEmpty()){
			    	writer.println("No result, try narrowing down the index terms");
			    }
			    else{
			    	writer.println("Search results:");
			    	for(String link: output){
			    		writer.println(link);
			    	}
			    }
			    writer.close();
			} catch (IOException e) {
			   e.printStackTrace();
			}
		}
		
	
   
	    public static void main(String[ ] args) throws IOException
	    {
	    	System.out.println("The program is loading the pages to the database......");
	        checkfile();
	        System.out.println("Loading success!");
	        Search();
	    	System.out.println("The result is written to Output.txt");
	    }
}
